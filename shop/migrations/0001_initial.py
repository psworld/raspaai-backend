# Generated by Django 2.2.8 on 2020-01-07 07:32

import datetime
import django.contrib.gis.db.models.fields
import django.contrib.gis.geos.point
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('location', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(76.931657, 31.708141, srid=4326), geography=True, null=True, srid=4326)),
                ('is_popular_place', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Combo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offered_price', models.DecimalField(decimal_places=0, max_digits=9)),
                ('name', models.CharField(max_length=200)),
                ('thumbs', models.TextField(blank=True, null=True)),
                ('total_cost', models.DecimalField(decimal_places=0, max_digits=9, null=True)),
                ('description', models.CharField(max_length=255)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ComboProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='PlanQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('username', models.CharField(db_index=True, max_length=50)),
                ('public_username', models.CharField(max_length=50)),
                ('contact_number', models.CharField(max_length=10, null=True)),
                ('hero_image', versatileimagefield.fields.VersatileImageField(upload_to='shop_images/', verbose_name='shop hero image')),
                ('is_active', models.BooleanField(default=False)),
                ('is_open_today', models.BooleanField(default=True)),
                ('open_at', models.TimeField(default=datetime.time(8, 0))),
                ('close_at', models.TimeField(default=datetime.time(18, 0))),
                ('off_days', models.CharField(default='[0]', max_length=32)),
                ('address', models.CharField(max_length=250)),
                ('location', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(76.931657, 31.708141, srid=4326), geography=True, null=True, srid=4326)),
                ('return_refund_policy', models.TextField(blank=True, default='["Item should be in the same good condition as it was when customer bought it.", "The return and refund window will only remain open for 7 days after customer have made the purchase.", "There should be no markings, names, ink or anything that was not previously on the product.", "Exchange of the product with other similar product will be preferred from our shop."]', max_length=800, null=True)),
                ('cluster', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shop.Cluster')),
            ],
        ),
        migrations.CreateModel(
            name='ShopPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_id', models.CharField(db_index=True, max_length=10)),
                ('name', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=0, max_digits=9)),
                ('product_space', models.PositiveIntegerField()),
                ('validity_duration', models.DurationField(default=datetime.timedelta(28), help_text='Validity period in days')),
            ],
        ),
        migrations.CreateModel(
            name='ShopProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offered_price', models.DecimalField(decimal_places=0, default=0, max_digits=9)),
                ('in_stock', models.BooleanField(default=True)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shop.Shop')),
            ],
        ),
        migrations.CreateModel(
            name='ShopApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('errors', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('shop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='application', to='shop.Shop')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='product.ApplicationStatus')),
            ],
        ),
    ]
